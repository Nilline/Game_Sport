@use "sass:math";

// Подключение миксинов ===========================================================================================================================================================================================================================================================================
@import "base/mixins";

// Подключение шрифтов ===========================================================================================================================================================================================================================================================================
//&display=swap - добавить при подключении через плагин
@import "base/fonts";
@import url("https://fonts.googleapis.com/css?family=Montserrat:regular,italic,500,600,700,800&display=swap");

// Подключение иконочных шрифтов ==============================================================================================================================================================================================================================================================================
@import "base/icons";

// Шрифт по умолчанию ==============================================================================================================================================================================================================================================================================
$fontFamily: "Montserrat";
$fontSize: rem(16); // где 14(px) - размер шрифта по умолчанию из макета

// НАСТРОЙКИ ===============================================================================================================================================================================================================================================================================================
// Минимальная ширина страницы
$minWidth: 320;
// Ширина полотна (макета)
$maxWidth: 1920;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 1199.98;
// Общий отступ у контейнера
// (30 = по 15px слева и справа, 0 = нет отступа)
$containerPadding: 30;

// Тип адаптива:
// 1 = отзывчивость (у контейнера нет брейкпоинтов),
// 2 = по брейк-поинтам (контейнер меняет свою ширину по брейк-поинтам)
$responsiveType: 2;

// Ширина страбатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поинты
$pc: em($containerWidth); // ПК, ноутбуки, некоторые планшеты в горизонтальном положении
$tablet: em(991.98); // Планшеты, некоторые телефоны в горизонтальном положении
$mobile: em(767.98); // Телефоны L
$mobileSmall: em(479.98); // Телефоны S

// Основной цвет шрифта
$mainColor: #fff;
$mainColorBlack: #000;

// Обнуление и общие параметры ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================
@import "base/null";

body {
	color: $mainColor;
	background-color: #001121;
	transition: background-color 0.3s ease 0s, color 0.3s ease 0s;
	// Скролл заблокирован
	.lock & {
		overflow: hidden;
		touch-action: none;
	}
}

// Оболочка ============================================================================================================================================================================================================================================================================================================================================================================================================================================
.wrapper {
	min-height: 100%;
	display: flex;
	flex-direction: column;
	overflow: hidden;
	// Сайт загружен
	.loaded & {
	}
	// Прижимаем footer
	> main {
		flex: 1 1 auto;
	}
	// Фикс для слайдеров
	> * {
		min-width: 0;
	}
}

// Ограничивающий контейнер ======================================================================================================================================================================================================================

/*
(i) Стили будут применяться ко 
всем классам содержащим *__container
Например header__container, main__container и т.д.
Снипет (HTML): cnt
*/
@if ($responsiveType==1) {
	// Отзывчивая
	[class*="__container"] {
		@if ($maxWidthContainer>0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box;
			margin: 0 auto;
		}
		@if ($containerPadding>0) {
			padding: 0 rem(math.div($containerPadding, 2));
		}
	}
} @else {
	// По брейк-поинтам
	[class*="__container"] {
		margin: 0 auto;
		@if ($maxWidthContainer>0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box;
		} @else {
			@if ($containerPadding>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}
		@media (max-width: $pc) {
			max-width: rem(900);
			@if ($containerPadding>0 and $maxWidthContainer>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}
		@media (max-width: $tablet) {
			// max-width: rem(750);
			max-width: none;
			@if ($containerPadding>0 and $maxWidthContainer>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}
		@media (max-width: $mobile) {
			// max-width: none;
			// @if ($containerPadding>0 and $maxWidthContainer>0) {
			// 	padding: 0 rem(math.div($containerPadding, 2));
			// }
		}
	}
}

// Подключение базовых стилей, шаблонов (заготовок) и вспомагательных классов
// Для подключения/отключения конкретных стилей смотри base.scss
@import "base";
@import "base/forms/select";

// Подключение стилей отдельных блоков
@import "header";
@import "footer";

// Подключение стилей отдельных страниц
@import "home";

//========================================================================================================================================================
.block-button {
	cursor: pointer;
	display: inline-flex;
	align-items: center;
	justify-content: center;
	background: linear-gradient(180deg, #db00ff 0%, #7000ff 100%);
	border-radius: rem(100);
	box-shadow: 0px -5px 34px rgb(255 0 199 / 60%);
	padding: rem(4);
	transition: box-shadow 0.2s ease 0s;
	._light-theme & {
		color: #e129ff;
	}
	&:not(.block-button_main) {
		._light-theme & {
			color: #fff;
		}
	}
	// .block-button__button
	&__button {
		position: relative;
		display: flex;
		justify-content: center;
		align-items: center;
		line-height: math.div(27, 22);
		font-weight: 600;
		border-radius: inherit;
		width: 100%;
		height: 100%;
		transition: background-color 0.2s ease 0s, color 0.2s ease 0s;
		&_main {
			._light-theme & {
				background: #fff;
				color: #e129ff;
			}
		}
	}
	@media (any-hover: hover) {
		&:hover {
			.block-button__button {
				&_main {
					._light-theme & {
						color: #a000ba;
					}
				}
			}
			box-shadow: 0px -5px 34px rgb(255 0 199 / 60%), 0px 277px 74px -246px #7000ff inset,
				0px -293px 60px -246px #db00ff inset;
		}
	}
}
div.block-button_main .block-button__button_main {
	min-height: 79px;
	padding: rem(11) rem(36);
	@include adaptiveValue("font-size", 22, 16, 767.98, 320, 1);
}
@media (max-width: $mobile) {
	div.block-button_main .block-button__button {
		@include adaptiveValue("min-height", 79, 40, 767.98, 320.98, 1);
	}
}
@media (max-width: $mobileSmall) {
	div.main-screen__button-block.block-button_main {
		width: 100%;
	}
}
input[type="text"],
input[type="email"],
input[type="tel"],
input[type="password"],
textarea,
.select__title {
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
	&:focus {
		outline: none;
	}
}
.input {
	transition: border-color 0.2s ease 0s;
	position: relative;
	z-index: 1;
	width: 100%;
	background-color: rgba(0, 0, 0, 0.3);
	border: 1.5px solid rgba(255, 255, 255, 0.3);
	border-radius: 44px;
	min-height: 44px;
	color: #fff;
	padding: 0 15px;

	&._form-focus {
	}
	&._form-error {
		border-color: #ff0000;
	}
}
.input[type="password"] {
	padding-right: 45px;
}
textarea.input {
	resize: none;
	padding: 15px;
	border-radius: 22px;
	min-height: 132px;
}
